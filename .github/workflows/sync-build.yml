name: Sync SBOMs & Build UI

on:
  # Triggered by Nightingale when Trivy completes
  repository_dispatch:
    types: [nightingale-trivy-complete]

  # Fallback: run monthly at 10:30 UTC on the 1st
  # Nightingale runs at 10:00 â†’ we pull 30 min later
  schedule:
    - cron: "30 10 1 * *"

  # Manual
  workflow_dispatch: {}

permissions:
  actions: read         # read artifacts in the Nightingale repo
  contents: read        # read this repo
  pages: write          # publish to Pages
  id-token: write       # auth for Pages

concurrency:
  group: "pages"

jobs:
  sync_build:
    runs-on: ubuntu-latest
    env:
      # Use branch from dispatch payload, else fall back to 'Sbom-Parser'
      TARGET_BRANCH: ${{ github.event.client_payload.target_branch || 'Sbom-Parser' }}
      # Where to pull artifacts from (your Nightingale repo)
      NIGHTINGALE_OWNER: sidbhasin13
      NIGHTINGALE_REPO: nightingale
    steps:
      - name: Checkout default branch (just to get the repo + full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Switch to target branch (create if missing)
        run: |
          git fetch origin
          if git ls-remote --exit-code --heads origin "$TARGET_BRANCH" >/dev/null 2>&1; then
            echo "Branch exists on remote: $TARGET_BRANCH"
            git switch "$TARGET_BRANCH"
            git pull --ff-only origin "$TARGET_BRANCH"
          else
            echo "Creating branch: $TARGET_BRANCH"
            git switch -c "$TARGET_BRANCH"
          fi
          git status

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: npm ci || npm i --no-audit --no-fund

      - name: Sync SBOM artifacts from Nightingale
        env:
          TOKEN: ${{ secrets.TOKEN_SBOM }}
          NIGHTINGALE_OWNER: ${{ env.NIGHTINGALE_OWNER }}
          NIGHTINGALE_REPO:  ${{ env.NIGHTINGALE_REPO }}
        run: npm run sync:sboms

      - name: Build snapshot
        run: npm run build:snapshot

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

  deploy:
    needs: sync_build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4